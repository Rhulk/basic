package serverbasic;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;

public class ServerBasic extends Thread {

    private static int puerto;
    private static ObjectInputStream entrada_imagen;
    private static ObjectOutputStream salida_imagen;
    private static LinkedListSocket linkedListSocket;
    private static Socket sk_add;
    private static int idSesion;

    public ServerBasic(Socket sk, int id, LinkedListSocket list) throws IOException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: new           #1                  // class java/lang/StringBuilder
         * 4: dup
         * 5: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
         * 8: ldc           #3                  // String
         * 10: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 13: iload_2
         * 14: invokevirtual #5                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
         * 17: invokevirtual #6                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 20: invokespecial #7                  // Method java/lang/Thread."<init>":(Ljava/lang/String;)V
         * 23: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 26: new           #1                  // class java/lang/StringBuilder
         * 29: dup
         * 30: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
         * 33: ldc           #9                  // String Socket sk add:
         * 35: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 38: getstatic     #10                 // Field sk_add:Ljava/net/Socket;
         * 41: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
         * 44: invokevirtual #6                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 47: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 50: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 53: new           #1                  // class java/lang/StringBuilder
         * 56: dup
         * 57: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
         * 60: ldc           #13                 // String Nombre del hilo:
         * 62: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 65: aload_0
         * 66: invokevirtual #14                 // Method getName:()Ljava/lang/String;
         * 69: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 72: ldc           #15                 // String . Id del hilo:
         * 74: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 77: aload_0
         * 78: invokevirtual #16                 // Method getId:()J
         * 81: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
         * 84: invokevirtual #6                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 87: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 90: aload_0
         * 91: pop
         * 92: aload_1
         * 93: putstatic     #10                 // Field sk_add:Ljava/net/Socket;
         * 96: aload_0
         * 97: pop
         * 98: iload_2
         * 99: putstatic     #18                 // Field idSesion:I
         * 102: aload_0
         * 103: pop
         * 104: aload_3
         * 105: putstatic     #19                 // Field linkedListSocket:Lserverbasic/LinkedListSocket;
         * 108: return
         *  */
        // </editor-fold>
    }

    public synchronized void run() {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: getstatic     #10                 // Field sk_add:Ljava/net/Socket;
         * 3: astore_1
         * 4: new           #20                 // class java/io/DataInputStream
         * 7: dup
         * 8: aload_1
         * 9: invokevirtual #21                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
         * 12: invokespecial #22                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
         * 15: astore_2
         * 16: new           #23                 // class java/io/DataOutputStream
         * 19: dup
         * 20: aload_1
         * 21: invokevirtual #24                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
         * 24: invokespecial #25                 // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
         * 27: astore_3
         * 28: aload_2
         * 29: invokevirtual #26                 // Method java/io/DataInputStream.readUTF:()Ljava/lang/String;
         * 32: astore        4
         * 34: aload         4
         * 36: ldc           #27                 // String resolucion
         * 38: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
         * 41: ifeq          62
         * 44: getstatic     #19                 // Field linkedListSocket:Lserverbasic/LinkedListSocket;
         * 47: aload_1
         * 48: invokevirtual #29                 // Method serverbasic/LinkedListSocket.addSocket:(Ljava/net/Socket;)V
         * 51: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 54: ldc           #30                 // String Socket guardado....
         * 56: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 59: goto          313
         * 62: aload         4
         * 64: ldc           #31                 // String peticion
         * 66: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
         * 69: ifeq          313
         * 72: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 75: new           #1                  // class java/lang/StringBuilder
         * 78: dup
         * 79: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
         * 82: ldc           #32                 // String peticion id:
         * 84: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 87: getstatic     #18                 // Field idSesion:I
         * 90: invokevirtual #5                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
         * 93: invokevirtual #6                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 96: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 99: aload_3
         * 100: ldc           #33                 // String vamos mandame la imagen
         * 102: invokevirtual #34                 // Method java/io/DataOutputStream.writeUTF:(Ljava/lang/String;)V
         * 105: new           #35                 // class java/io/ObjectInputStream
         * 108: dup
         * 109: aload_1
         * 110: invokevirtual #21                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
         * 113: invokespecial #36                 // Method java/io/ObjectInputStream."<init>":(Ljava/io/InputStream;)V
         * 116: putstatic     #37                 // Field entrada_imagen:Ljava/io/ObjectInputStream;
         * 119: invokestatic  #38                 // Method leerImagenCliente:()V
         * 122: iconst_0
         * 123: istore        5
         * 125: getstatic     #19                 // Field linkedListSocket:Lserverbasic/LinkedListSocket;
         * 128: invokevirtual #39                 // Method serverbasic/LinkedListSocket.getSocketFirst:()Ljava/net/Socket;
         * 131: astore        6
         * 133: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 136: new           #1                  // class java/lang/StringBuilder
         * 139: dup
         * 140: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
         * 143: ldc           #40                 // String Socket obgenido:
         * 145: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 148: aload         6
         * 150: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
         * 153: invokevirtual #6                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 156: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 159: new           #23                 // class java/io/DataOutputStream
         * 162: dup
         * 163: aload         6
         * 165: invokevirtual #24                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
         * 168: invokespecial #25                 // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
         * 171: astore        7
         * 173: new           #20                 // class java/io/DataInputStream
         * 176: dup
         * 177: aload         6
         * 179: invokevirtual #21                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
         * 182: invokespecial #22                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
         * 185: astore        8
         * 187: aload         7
         * 189: ldc           #41                 // String Captcha...
         * 191: invokevirtual #34                 // Method java/io/DataOutputStream.writeUTF:(Ljava/lang/String;)V
         * 194: aload         6
         * 196: invokestatic  #42                 // Method enviarImagen:(Ljava/net/Socket;)V
         * 199: aload         8
         * 201: invokevirtual #26                 // Method java/io/DataInputStream.readUTF:()Ljava/lang/String;
         * 204: astore        9
         * 206: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 209: new           #1                  // class java/lang/StringBuilder
         * 212: dup
         * 213: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
         * 216: ldc           #43                 // String socket Peticion :
         * 218: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 221: aload_1
         * 222: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
         * 225: invokevirtual #6                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 228: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 231: aload_3
         * 232: aload         9
         * 234: invokevirtual #34                 // Method java/io/DataOutputStream.writeUTF:(Ljava/lang/String;)V
         * 237: goto          308
         * 240: astore        6
         * 242: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 245: ldc           #45                 // String  << Fallo obteniendo Socket >> ...\t [KO]
         * 247: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 250: iconst_1
         * 251: istore        5
         * 253: goto          308
         * 256: astore        6
         * 258: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 261: ldc           #47                 // String  << No hay conexiones >> ...\t [KO]
         * 263: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 266: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 269: getstatic     #18                 // Field idSesion:I
         * 272: invokevirtual #48                 // Method java/io/PrintStream.println:(I)V
         * 275: aload_1
         * 276: invokevirtual #49                 // Method java/net/Socket.close:()V
         * 279: ldc2_w        #50                 // long 5000l
         * 282: invokestatic  #52                 // Method sleep:(J)V
         * 285: goto          308
         * 288: astore        7
         * 290: ldc_w         #54                 // class serverbasic/ServerBasic
         * 293: invokevirtual #55                 // Method java/lang/Class.getName:()Ljava/lang/String;
         * 296: invokestatic  #56                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
         * 299: getstatic     #57                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
         * 302: aconst_null
         * 303: aload         7
         * 305: invokevirtual #58                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
         * 308: iload         5
         * 310: ifne          122
         * 313: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 316: new           #1                  // class java/lang/StringBuilder
         * 319: dup
         * 320: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
         * 323: ldc           #59                 // String Fin peticion id:
         * 325: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 328: getstatic     #18                 // Field idSesion:I
         * 331: invokevirtual #5                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
         * 334: invokevirtual #6                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 337: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 340: getstatic     #19                 // Field linkedListSocket:Lserverbasic/LinkedListSocket;
         * 343: invokevirtual #60                 // Method serverbasic/LinkedListSocket.listSocket:()V
         * 346: goto          375
         * 349: astore_1
         * 350: ldc_w         #54                 // class serverbasic/ServerBasic
         * 353: invokevirtual #55                 // Method java/lang/Class.getName:()Ljava/lang/String;
         * 356: invokestatic  #56                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
         * 359: getstatic     #57                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
         * 362: aconst_null
         * 363: aload_1
         * 364: invokevirtual #58                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
         * 367: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 370: ldc           #62                 // String excepcion... run server
         * 372: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 375: return
         * Exception table:
         * from    to  target type
         * 125   237   240   Class java/net/SocketException
         * 125   237   256   Class java/util/NoSuchElementException
         * 279   285   288   Class java/lang/InterruptedException
         * 0   346   349   Class java/io/IOException
         *  */
        // </editor-fold>
    }

    public static void leerImagenCliente() throws IOException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: getstatic     #37                 // Field entrada_imagen:Ljava/io/ObjectInputStream;
         * 3: invokevirtual #63                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
         * 6: checkcast     #64                 // class "[B"
         * 9: checkcast     #64                 // class "[B"
         * 12: astore_0
         * 13: new           #65                 // class java/io/ByteArrayInputStream
         * 16: dup
         * 17: aload_0
         * 18: invokespecial #66                 // Method java/io/ByteArrayInputStream."<init>":([B)V
         * 21: astore_1
         * 22: aload_1
         * 23: invokestatic  #67                 // Method javax/imageio/ImageIO.read:(Ljava/io/InputStream;)Ljava/awt/image/BufferedImage;
         * 26: astore_2
         * 27: new           #1                  // class java/lang/StringBuilder
         * 30: dup
         * 31: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
         * 34: ldc           #68                 // String C:\Documents and Settings\Administrador\Escritorio\
         * 36: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 39: getstatic     #18                 // Field idSesion:I
         * 42: invokevirtual #5                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
         * 45: ldc           #69                 // String .jpg
         * 47: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 50: invokevirtual #6                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 53: astore_3
         * 54: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 57: new           #1                  // class java/lang/StringBuilder
         * 60: dup
         * 61: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
         * 64: ldc           #70                 // String Generando el fichero:
         * 66: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 69: aload_3
         * 70: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 73: invokevirtual #6                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 76: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 79: new           #71                 // class java/io/FileOutputStream
         * 82: dup
         * 83: aload_3
         * 84: invokespecial #72                 // Method java/io/FileOutputStream."<init>":(Ljava/lang/String;)V
         * 87: astore        4
         * 89: aload_2
         * 90: ldc           #73                 // String jpg
         * 92: aload         4
         * 94: invokestatic  #74                 // Method javax/imageio/ImageIO.write:(Ljava/awt/image/RenderedImage;Ljava/lang/String;Ljava/io/OutputStream;)Z
         * 97: pop
         * 98: goto          110
         * 101: astore_0
         * 102: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 105: ldc           #76                 // String \nSe recibiÃ³ un tipo de objeto desconocido
         * 107: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 110: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 113: ldc           #77                 // String Imagen gardada de cliente
         * 115: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 118: return
         * Exception table:
         * from    to  target type
         * 0    98   101   Class java/lang/ClassNotFoundException
         *  */
        // </editor-fold>
    }

    public static void enviarImagen(Socket sk_cr) throws IOException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: new           #78                 // class java/io/ObjectOutputStream
         * 3: dup
         * 4: aload_0
         * 5: invokevirtual #24                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
         * 8: invokespecial #79                 // Method java/io/ObjectOutputStream."<init>":(Ljava/io/OutputStream;)V
         * 11: putstatic     #80                 // Field salida_imagen:Ljava/io/ObjectOutputStream;
         * 14: new           #81                 // class java/io/File
         * 17: dup
         * 18: new           #1                  // class java/lang/StringBuilder
         * 21: dup
         * 22: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
         * 25: ldc           #68                 // String C:\Documents and Settings\Administrador\Escritorio\
         * 27: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 30: getstatic     #18                 // Field idSesion:I
         * 33: invokevirtual #5                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
         * 36: ldc           #69                 // String .jpg
         * 38: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 41: invokevirtual #6                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 44: invokespecial #82                 // Method java/io/File."<init>":(Ljava/lang/String;)V
         * 47: invokestatic  #83                 // Method javax/imageio/ImageIO.read:(Ljava/io/File;)Ljava/awt/image/BufferedImage;
         * 50: astore_1
         * 51: new           #84                 // class java/io/ByteArrayOutputStream
         * 54: dup
         * 55: invokespecial #85                 // Method java/io/ByteArrayOutputStream."<init>":()V
         * 58: astore_2
         * 59: aload_1
         * 60: ldc           #73                 // String jpg
         * 62: aload_2
         * 63: invokestatic  #74                 // Method javax/imageio/ImageIO.write:(Ljava/awt/image/RenderedImage;Ljava/lang/String;Ljava/io/OutputStream;)Z
         * 66: pop
         * 67: aload_2
         * 68: invokevirtual #86                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
         * 71: astore_3
         * 72: getstatic     #80                 // Field salida_imagen:Ljava/io/ObjectOutputStream;
         * 75: aload_3
         * 76: invokevirtual #87                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
         * 79: getstatic     #80                 // Field salida_imagen:Ljava/io/ObjectOutputStream;
         * 82: invokevirtual #88                 // Method java/io/ObjectOutputStream.flush:()V
         * 85: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 88: ldc           #89                 // String Se ha enviado la imagen desde el server
         * 90: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 93: goto          137
         * 96: astore_1
         * 97: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 100: ldc           #90                 // String \nError al escribir el objeto
         * 102: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 105: goto          137
         * 108: astore_1
         * 109: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
         * 112: new           #1                  // class java/lang/StringBuilder
         * 115: dup
         * 116: invokespecial #2                  // Method java/lang/StringBuilder."<init>":()V
         * 119: ldc           #92                 // String Mensage de error..
         * 121: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 124: aload_1
         * 125: invokevirtual #93                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
         * 128: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 131: invokevirtual #6                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 134: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         * 137: return
         * Exception table:
         * from    to  target type
         * 0    93    96   Class java/io/IOException
         * 0    93   108   Class java/lang/Exception
         *  */
        // </editor-fold>
    }
}
